---
- name: Create content-snapshot directory
  file:
    path: '{{ content_snapshot_path }}'
    state: directory
  become: yes
  become_user: root
  tags:
    - deploy

- name: Delete output dirs
  become: yes
  become_user: root
  file:
    path: "{{ output_file_path }}"
    state: absent
  tags:
    - execute-script    

  
- name: Copy distributed jar
  copy: src={{ content_snapshot_distribuction_name }} dest={{ content_snapshot_path }}
  become: yes
  become_user: root
  tags:
    - deploy
  
- name: Ensure removing jars directory
  file:
    path: "{{ content_snapshot_jar_path }}"
    state: absent
  tags:
    - deploy
  become: yes
  become_user: root

- name: Create jars directory
  file:
    path: "{{ content_snapshot_jar_path }}"
    state: directory
  become: yes
  become_user: root
  tags:
    - deploy

- name: Create logs directory
  file:
    path: '{{ content_snapshot_path }}/logs'
    state: directory
  become: yes
  become_user: root
  tags:
    - deploy

- name: Unarchive etl job script
  become: yes
  become_user: root
  unarchive: src={{ content_snapshot_path }}/{{ content_snapshot_distribuction_name }} dest={{ content_snapshot_jar_path }} copy=no group={{ analytics_group }} owner={{ analytics_user }}
  tags:
    - deploy

- name: Copy etl-jobs jar file
  become: yes
  become_user: root
  copy:
    src: "{{ content_snapshot_jar_name }}"
    dest: "{{ content_snapshot_jar_path }}"
    owner: "{{ analytics_user }}" 
    group: "{{ analytics_group }}"
  tags:
    - deploy

- name: Ensure removing config directory
  become: yes
  become_user: root
  file:
    path: '{{ content_snapshot_path }}/config'
    state: absent
  tags:
    - execute-script

- name: Create config directory
  file:
    path: "{{ content_snapshot_path }}/config"
    state: directory
  become: yes
  become_user: root
  tags:
    - execute-script

- name: Ensure copying all conf files from the templates/conf folder
  become: yes
  become_user: root
  template:
    src: "conf/{{ item }}.j2"
    dest: "{{ content_snapshot_path }}/config/{{ item }}.conf"
    owner: "{{ analytics_user }}" 
    group: "{{ analytics_group }}"
  with_items: "{{ config_files }}"
  tags:
    - execute-script

- name: Ensure removing scripts directory
  become: yes
  become_user: root
  file:
    path: '{{ content_snapshot_path }}/scripts'
    state: absent
  become_user: "{{ analytics_user }}"  
  tags:
    - execute-script

- name: Create scripts directory
  become: yes
  become_user: root
  file:
    path: '{{ content_snapshot_path }}/scripts'
    state: directory
  become: yes
  become_user: root
  tags:
    - execute-script

- name: Ensure copying all script files from the templates/script dir
  become: yes
  template:
    src: "scripts/{{ item }}.j2"
    dest: "{{ content_snapshot_path }}/scripts/{{ item }}.sh"
    owner: "{{ analytics_user }}" 
    group: "{{ analytics_group }}"
    mode: 0777
  with_items: "{{ script_files }}"
  tags:
    - execute-script

- name: Run Script
  become: yes
  shell: "sh {{ content_snapshot_path }}/scripts/run-script.sh {{ script_to_run }} {{ identifier }} {{ date }} {{ populate_anonymous_user }} {{ refresh_data }} >> {{ content_snapshot_path }}/logs/{{ansible_date_time.date}}-shell-execution.log"
  poll: 0
  async: 45
  tags:
    - execute-script



